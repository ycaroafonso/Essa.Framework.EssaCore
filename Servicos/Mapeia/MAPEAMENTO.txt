modelBuilder.Entity<anomes>().HasKey(c => new { c.ano, c.mes });
modelBuilder.Entity<aspnetuserlogins>().HasKey(c => new { c.LoginProvider, c.ProviderKey, c.UserId });
modelBuilder.Entity<aspnetuserroles>().HasKey(c => new { c.UserId, c.RoleId });
modelBuilder.Entity<contafechamento>().HasKey(c => new { c.contaid, c.anomes });
modelBuilder.Entity<contamarcador>().HasKey(c => new { c.contaid, c.marcadorid });
modelBuilder.Entity<documentocurso_produto>().HasKey(c => new { c.produtoid, c.documentoidcurso });
modelBuilder.Entity<documentotiporegrapasso>().HasKey(c => new { c.documentotiporegrapassoid, c.documentotiporegraid });
modelBuilder.Entity<documentoturmaencontropresenca>().HasKey(c => new { c.documentoenvolvidoid, c.agendaiddocumentoturmaencontro });
modelBuilder.Entity<documentovinculado>().HasKey(c => new { c.documentoidvinculo, c.documentoid });
modelBuilder.Entity<dominioempresa>().HasKey(c => new { c.dominioid, c.empresaid });
modelBuilder.Entity<fw_mapear>().HasKey(c => new { c.sistema, c.De });
modelBuilder.Entity<fw_mapear_coluna>().HasKey(c => new { c.sistema, c.tabela, c.coluna });
modelBuilder.Entity<movimentomarcador>().HasKey(c => new { c.movimentoid, c.marcadorid });
modelBuilder.Entity<orcamento>().HasKey(c => new { c.empresaid, c.ano, c.mes, c.classificacaoid, c.centrocustoid });
modelBuilder.Entity<pessoamarcador>().HasKey(c => new { c.pessoaid, c.marcadorid });
modelBuilder.Entity<portalmenuempresapermissao>().HasKey(c => new { c.portalmenuid, c.empresaid });
modelBuilder.Entity<portalmenuusuario>().HasKey(c => new { c.portalmenuid, c.usuarioid });
modelBuilder.Entity<portalmenuusuariopermissao>().HasKey(c => new { c.portalmenuid, c.usuarioid });
modelBuilder.Entity<produtoatributo>().HasKey(c => new { c.produtoid, c.chave });
modelBuilder.Entity<produtoconversao>().HasKey(c => new { c.produtoidde, c.produtoidpara });
modelBuilder.Entity<produtomarcador>().HasKey(c => new { c.produtoid, c.marcadorid });
modelBuilder.Entity<usuariopermissaoconta>().HasKey(c => new { c.usuarioid, c.contaid });
modelBuilder.Entity<usuariopermissaolocal>().HasKey(c => new { c.usuarioid, c.pessoaidlocal });
modelBuilder.Entity<taxa>().HasKey(c => new { c.titulo, c.data });

modelBuilder.Entity<aspnetroles>().HasMany(e => e.aspnetuserroles).WithOne(e => e.aspnetroles).HasForeignKey(e => e.RoleId);
modelBuilder.Entity<aspnetusers>().HasMany(e => e.aspnetuserclaims).WithOne(e => e.aspnetusers).HasForeignKey(e => e.UserId);
modelBuilder.Entity<aspnetusers>().HasMany(e => e.aspnetuserlogins).WithOne(e => e.aspnetusers).HasForeignKey(e => e.UserId);
modelBuilder.Entity<aspnetusers>().HasMany(e => e.aspnetuserroles).WithOne(e => e.aspnetusers).HasForeignKey(e => e.UserId);
modelBuilder.Entity<auditoria>().HasMany(e => e.auditoriaitem).WithOne(e => e.auditoria).HasForeignKey(e => e.aud_codigo);
modelBuilder.Entity<cargo>().HasMany(e => e.documentoenvolvido).WithOne(e => e.cargo).HasForeignKey(e => e.cargoid);
modelBuilder.Entity<cargo>().HasMany(e => e.mandatodiretoria).WithOne(e => e.cargo).HasForeignKey(e => e.cargoid);
modelBuilder.Entity<centrocusto>().HasMany(e => e.documento).WithOne(e => e.centrocusto).HasForeignKey(e => e.centrocustoid);
modelBuilder.Entity<centrocusto>().HasMany(e => e.documentoformapagamento).WithOne(e => e.centrocusto).HasForeignKey(e => e.centrocustoid);
modelBuilder.Entity<centrocusto>().HasMany(e => e.movimento).WithOne(e => e.centrocusto).HasForeignKey(e => e.centrocustoid);
modelBuilder.Entity<centrocusto>().HasMany(e => e.movimentofavorito).WithOne(e => e.centrocusto).HasForeignKey(e => e.centrocustoid);
modelBuilder.Entity<centrocusto>().HasMany(e => e.movimentopendencia).WithOne(e => e.centrocusto).HasForeignKey(e => e.centrocustoid);
modelBuilder.Entity<classificacao>().HasMany(e => e.classificacaoFilhos).WithOne(e => e.classificacaopai2).HasForeignKey(e => e.classificacaoidpai2);
modelBuilder.Entity<classificacao>().HasMany(e => e.documentoformapagamento).WithOne(e => e.classificacao).HasForeignKey(e => e.classificacaoid);
modelBuilder.Entity<classificacao>().HasMany(e => e.movimento).WithOne(e => e.classificacao).HasForeignKey(e => e.classificacaoid);
modelBuilder.Entity<classificacao>().HasMany(e => e.movimentofavorito).WithOne(e => e.classificacao).HasForeignKey(e => e.classificacaoid);
modelBuilder.Entity<classificacao>().HasMany(e => e.movimentopendencia).WithOne(e => e.classificacao).HasForeignKey(e => e.classificacaoid);
modelBuilder.Entity<classificacao>().HasMany(e => e.orcamento).WithOne(e => e.classificacao).HasForeignKey(e => e.classificacaoid);
modelBuilder.Entity<classificacao>().HasMany(e => e.produtoestoque).WithOne(e => e.classificacao).HasForeignKey(e => e.classificacaoid);
modelBuilder.Entity<classificacao>().HasMany(e => e.produtoformapagamento).WithOne(e => e.classificacao).HasForeignKey(e => e.classificacaoid);
modelBuilder.Entity<conta>().HasMany(e => e.classificacao).WithOne(e => e.conta).HasForeignKey(e => e.contaiddestinovirtual);
modelBuilder.Entity<conta>().HasMany(e => e.contaFilhos).WithOne(e => e.contapai).HasForeignKey(e => e.contaidpai);
modelBuilder.Entity<conta>().HasMany(e => e.contafechamento).WithOne(e => e.conta).HasForeignKey(e => e.contaid);
modelBuilder.Entity<conta>().HasMany(e => e.contamarcador).WithOne(e => e.conta).HasForeignKey(e => e.contaid);
modelBuilder.Entity<conta>().HasMany(e => e.documentoformapagamento).WithOne(e => e.conta).HasForeignKey(e => e.contaid);
modelBuilder.Entity<conta>().HasMany(e => e.movimento).WithOne(e => e.conta).HasForeignKey(e => e.contaid);
modelBuilder.Entity<conta>().HasMany(e => e.movimentobanco).WithOne(e => e.conta).HasForeignKey(e => e.contaid);
modelBuilder.Entity<conta>().HasMany(e => e.movimentopendencia).WithOne(e => e.conta).HasForeignKey(e => e.contaid);
modelBuilder.Entity<conta>().HasMany(e => e.produtoestoque).WithOne(e => e.conta).HasForeignKey(e => e.contaid);
modelBuilder.Entity<conta>().HasMany(e => e.usuariopermissaoconta).WithOne(e => e.conta).HasForeignKey(e => e.contaid);
modelBuilder.Entity<documento>().HasMany(e => e.documentoFilhos).WithOne(e => e.documentocontrato2).HasForeignKey(e => e.documentoidcontrato2);
modelBuilder.Entity<documento>().HasMany(e => e.documentoandamento).WithOne(e => e.documento).HasForeignKey(e => e.documentoid);
modelBuilder.Entity<documento>().HasMany(e => e.documentoenvolvido).WithOne(e => e.documento).HasForeignKey(e => e.documentoid);
modelBuilder.Entity<documento>().HasMany(e => e.documentoformapagamento).WithOne(e => e.documento).HasForeignKey(e => e.documentoid);
modelBuilder.Entity<documento>().HasMany(e => e.documentoitem).WithOne(e => e.documento).HasForeignKey(e => e.documentoid);
modelBuilder.Entity<documento>().HasMany(e => e.documentoturmaencontro).WithOne(e => e.documento).HasForeignKey(e => e.documentoidturma);
modelBuilder.Entity<documento>().HasMany(e => e.documentovinculado).WithOne(e => e.documento).HasForeignKey(e => e.documentoid);
modelBuilder.Entity<documento>().HasMany(e => e.documentovinculadovinculo).WithOne(e => e.documentovinculo).HasForeignKey(e => e.documentoidvinculo);
modelBuilder.Entity<documento>().HasMany(e => e.movimento).WithOne(e => e.documento).HasForeignKey(e => e.documentoid);
modelBuilder.Entity<documento>().HasMany(e => e.movimentopendencia).WithOne(e => e.documento).HasForeignKey(e => e.documentoid);
modelBuilder.Entity<documento>().HasMany(e => e.notafiscal).WithOne(e => e.documento).HasForeignKey(e => e.documentoidpagamento);
modelBuilder.Entity<documentocontrato>().HasMany(e => e.documentopagamento).WithOne(e => e.documentocontrato).HasForeignKey(e => e.documentoidcontrato);
modelBuilder.Entity<documentocurso>().HasMany(e => e.documentocurso_produto).WithOne(e => e.documentocurso).HasForeignKey(e => e.documentoidcurso);
modelBuilder.Entity<documentocurso>().HasMany(e => e.documentoturma).WithOne(e => e.documentocurso).HasForeignKey(e => e.documentoidcurso);
modelBuilder.Entity<documentoenvolvido>().HasMany(e => e.documentoturmaencontropresenca).WithOne(e => e.documentoenvolvido).HasForeignKey(e => e.documentoenvolvidoid);
modelBuilder.Entity<documentoformapagamento>().HasMany(e => e.movimentopendencia).WithOne(e => e.documentoformapagamento).HasForeignKey(e => e.documentoformapagamentoid);
modelBuilder.Entity<documentotarefa>().HasMany(e => e.documentotarefaFilhos).WithOne(e => e.documentotarefapai).HasForeignKey(e => e.documentoidtarefapai);
modelBuilder.Entity<documentotipo>().HasMany(e => e.documento).WithOne(e => e.documentotipo).HasForeignKey(e => e.documentotipoid);
modelBuilder.Entity<documentotipo>().HasMany(e => e.documentointerno).WithOne(e => e.documentotipointerno).HasForeignKey(e => e.documentotipoidinterno);
modelBuilder.Entity<documentotipo>().HasMany(e => e.documentotipoFilhos).WithOne(e => e.documentotipopai).HasForeignKey(e => e.documentotipoidpai);
modelBuilder.Entity<documentotipo>().HasMany(e => e.documentotiporegra).WithOne(e => e.documentotipo).HasForeignKey(e => e.documentotipoid);
modelBuilder.Entity<documentotipo>().HasMany(e => e.processo).WithOne(e => e.documentotipo).HasForeignKey(e => e.documentotipoid);
modelBuilder.Entity<documentotiporegra>().HasMany(e => e.documentotiporegrapasso).WithOne(e => e.documentotiporegra).HasForeignKey(e => e.documentotiporegraid);
modelBuilder.Entity<documentoturmaencontro>().HasMany(e => e.documentoturmaencontropresenca).WithOne(e => e.documentoturmaencontro).HasForeignKey(e => e.agendaiddocumentoturmaencontro);
modelBuilder.Entity<dominio>().HasMany(e => e.agenda).WithOne(e => e.dominiotipoagenda).HasForeignKey(e => e.dominioidtipoagenda);
modelBuilder.Entity<dominio>().HasMany(e => e.cargo).WithOne(e => e.dominiotipo).HasForeignKey(e => e.dominioidtipo);
modelBuilder.Entity<dominio>().HasMany(e => e.contatipoconta).WithOne(e => e.dominiotipoconta).HasForeignKey(e => e.dominioidtipoconta);
modelBuilder.Entity<dominio>().HasMany(e => e.contabanco).WithOne(e => e.dominiobanco).HasForeignKey(e => e.dominioidbanco);
modelBuilder.Entity<dominio>().HasMany(e => e.documentoperiodocobranca).WithOne(e => e.dominioperiodocobranca).HasForeignKey(e => e.dominioidperiodocobranca);
modelBuilder.Entity<dominio>().HasMany(e => e.documentosituacao).WithOne(e => e.dominiosituacao).HasForeignKey(e => e.dominioidsituacao);
modelBuilder.Entity<dominio>().HasMany(e => e.documentocontrato).WithOne(e => e.dominiotipoponto).HasForeignKey(e => e.dominioidtipoponto);
modelBuilder.Entity<dominio>().HasMany(e => e.documentoenvolvidotipo).WithOne(e => e.dominiotipo).HasForeignKey(e => e.dominioidtipo);
modelBuilder.Entity<dominio>().HasMany(e => e.documentoenvolvidosituacao).WithOne(e => e.dominiosituacao).HasForeignKey(e => e.dominioidsituacao);
modelBuilder.Entity<dominio>().HasMany(e => e.documentoformapagamento).WithOne(e => e.dominiotipo).HasForeignKey(e => e.dominioidtipo);
modelBuilder.Entity<dominio>().HasMany(e => e.documentotarefatipocontato).WithOne(e => e.dominiotipocontato).HasForeignKey(e => e.dominioidtipocontato);
modelBuilder.Entity<dominio>().HasMany(e => e.documentotarefatipo).WithOne(e => e.dominiotipo).HasForeignKey(e => e.dominioidtipo);
modelBuilder.Entity<dominio>().HasMany(e => e.documentotarefagravidade).WithOne(e => e.dominiogravidade).HasForeignKey(e => e.dominioidgravidade);
modelBuilder.Entity<dominio>().HasMany(e => e.documentotarefaurgencia).WithOne(e => e.dominiourgencia).HasForeignKey(e => e.dominioidurgencia);
modelBuilder.Entity<dominio>().HasMany(e => e.documentotarefatendencia).WithOne(e => e.dominiotendencia).HasForeignKey(e => e.dominioidtendencia);
modelBuilder.Entity<dominio>().HasMany(e => e.documentoturma).WithOne(e => e.dominiosituacao).HasForeignKey(e => e.dominioidsituacao);
modelBuilder.Entity<dominio>().HasMany(e => e.dominioempresa).WithOne(e => e.dominio).HasForeignKey(e => e.dominioid);
modelBuilder.Entity<dominio>().HasMany(e => e.empresa).WithOne(e => e.dominiotipo).HasForeignKey(e => e.dominioidtipo);
modelBuilder.Entity<dominio>().HasMany(e => e.lembrete).WithOne(e => e.dominiotipoenvio).HasForeignKey(e => e.dominioidtipoenvio);
modelBuilder.Entity<dominio>().HasMany(e => e.marcador).WithOne(e => e.dominiotipo).HasForeignKey(e => e.dominioidtipo);
modelBuilder.Entity<dominio>().HasMany(e => e.notafiscal).WithOne(e => e.dominiotipo).HasForeignKey(e => e.dominioidtipo);
modelBuilder.Entity<dominio>().HasMany(e => e.pessoatipopessoa).WithOne(e => e.dominiotipopessoa).HasForeignKey(e => e.dominioidtipopessoa);
modelBuilder.Entity<dominio>().HasMany(e => e.pessoaestadocivil).WithOne(e => e.dominioestadocivil).HasForeignKey(e => e.dominioidestadocivil);
modelBuilder.Entity<dominio>().HasMany(e => e.pessoagenero).WithOne(e => e.dominiogenero).HasForeignKey(e => e.dominioidgenero);
modelBuilder.Entity<dominio>().HasMany(e => e.pessoabanco).WithOne(e => e.dominiobanco).HasForeignKey(e => e.dominioidbanco);
modelBuilder.Entity<dominio>().HasMany(e => e.pessoaassociado).WithOne(e => e.dominiosituacao).HasForeignKey(e => e.dominioidsituacao);
modelBuilder.Entity<dominio>().HasMany(e => e.pessoacontato).WithOne(e => e.dominiotipocontato).HasForeignKey(e => e.dominioidtipocontato);
modelBuilder.Entity<dominio>().HasMany(e => e.pessoadependentegenero).WithOne(e => e.dominiogenero).HasForeignKey(e => e.dominioidgenero);
modelBuilder.Entity<dominio>().HasMany(e => e.pessoadependentetipo).WithOne(e => e.dominiotipo).HasForeignKey(e => e.dominioidtipo);
modelBuilder.Entity<dominio>().HasMany(e => e.pessoafornecedor).WithOne(e => e.dominiosituacao).HasForeignKey(e => e.dominioidsituacao);
modelBuilder.Entity<dominio>().HasMany(e => e.pontopdf).WithOne(e => e.dominiotipoponto).HasForeignKey(e => e.dominioidtipoponto);
modelBuilder.Entity<dominio>().HasMany(e => e.produto).WithOne(e => e.dominiotipo).HasForeignKey(e => e.dominioidtipo);
modelBuilder.Entity<dominiocategoria>().HasMany(e => e.dominio).WithOne(e => e.dominiocategoria).HasForeignKey(e => e.dominiocategoriaid);
modelBuilder.Entity<empresa>().HasMany(e => e.agenda).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.auditoria).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.cargo).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.centrocusto).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.classificacao).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.conta).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.documento).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.documentouo).WithOne(e => e.empresauo).HasForeignKey(e => e.empresaiduo);
modelBuilder.Entity<empresa>().HasMany(e => e.documentotipo).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.documentotiporegra).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.dominioempresa).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.empresaorcamentariaFilhos).WithOne(e => e.empresaorcamentaria).HasForeignKey(e => e.empresaidorcamentaria);
modelBuilder.Entity<empresa>().HasMany(e => e.empresaunidadegestoraFilhos).WithOne(e => e.empresaunidadegestora).HasForeignKey(e => e.empresaidunidadegestora);
modelBuilder.Entity<empresa>().HasMany(e => e.funcionario).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.mandato).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.marcador).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.movimento).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.movimentobanco).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.movimentopendencia).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.notafiscal).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.orcamento).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.pasta).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.pessoa).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.pessoaassociado).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.pessoafornecedor).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.portalmenuempresapermissao).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.produto).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.produtoestoque).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.produtoformapagamento).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<empresa>().HasMany(e => e.usuario).WithOne(e => e.empresa).HasForeignKey(e => e.empresaid);
modelBuilder.Entity<funcionario>().HasMany(e => e.documentoconsulta).WithOne(e => e.funcionario).HasForeignKey(e => e.PessoaIdEnfermeiro);
modelBuilder.Entity<mandato>().HasMany(e => e.documento).WithOne(e => e.mandato).HasForeignKey(e => e.mandatoid);
modelBuilder.Entity<mandato>().HasMany(e => e.mandatodiretoria).WithOne(e => e.mandato).HasForeignKey(e => e.mandatoid);
modelBuilder.Entity<marcador>().HasMany(e => e.contamarcador).WithOne(e => e.marcador).HasForeignKey(e => e.marcadorid);
modelBuilder.Entity<marcador>().HasMany(e => e.marcadorFilhos).WithOne(e => e.marcadorpai).HasForeignKey(e => e.marcadoridpai);
modelBuilder.Entity<marcador>().HasMany(e => e.movimentomarcador).WithOne(e => e.marcador).HasForeignKey(e => e.marcadorid);
modelBuilder.Entity<marcador>().HasMany(e => e.pessoamarcador).WithOne(e => e.marcador).HasForeignKey(e => e.marcadorid);
modelBuilder.Entity<marcador>().HasMany(e => e.produtomarcador).WithOne(e => e.marcador).HasForeignKey(e => e.marcadorid);
modelBuilder.Entity<movimento>().HasMany(e => e.movimentoFilhos).WithOne(e => e.movimentotransferencia).HasForeignKey(e => e.movimentoidtransferencia);
modelBuilder.Entity<movimento>().HasMany(e => e.movimentomarcador).WithOne(e => e.movimento).HasForeignKey(e => e.movimentoid);
modelBuilder.Entity<movimento>().HasMany(e => e.movimentopendencia).WithOne(e => e.movimento).HasForeignKey(e => e.movimentoid);
modelBuilder.Entity<movimentobanco>().HasMany(e => e.movimento).WithOne(e => e.movimentobanco).HasForeignKey(e => e.movimentobancoid);
modelBuilder.Entity<municipio>().HasMany(e => e.empresa).WithOne(e => e.municipio).HasForeignKey(e => e.codigoibge);
modelBuilder.Entity<municipio>().HasMany(e => e.pessoa).WithOne(e => e.municipio).HasForeignKey(e => e.codigoibge);
modelBuilder.Entity<municipio>().HasMany(e => e.propriedade).WithOne(e => e.municipio).HasForeignKey(e => e.codigoibge);
modelBuilder.Entity<notafiscal>().HasMany(e => e.notafiscalitem).WithOne(e => e.notafiscal).HasForeignKey(e => e.notafiscalid);
modelBuilder.Entity<pasta>().HasMany(e => e.documento).WithOne(e => e.pasta).HasForeignKey(e => e.pastaid);
modelBuilder.Entity<pasta>().HasMany(e => e.pastaFilhos).WithOne(e => e.pastapai).HasForeignKey(e => e.pastaidpai);
modelBuilder.Entity<pessoa>().HasMany(e => e.conta).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaidinstituicao);
modelBuilder.Entity<pessoa>().HasMany(e => e.documentoremetente).WithOne(e => e.pessoaremetente).HasForeignKey(e => e.pessoaidremetente);
modelBuilder.Entity<pessoa>().HasMany(e => e.documentodestinatario).WithOne(e => e.pessoadestinatario).HasForeignKey(e => e.pessoaiddestinatario);
modelBuilder.Entity<pessoa>().HasMany(e => e.documentoandamento).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaidde);
modelBuilder.Entity<pessoa>().HasMany(e => e.documentoenvolvido).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaid);
modelBuilder.Entity<pessoa>().HasMany(e => e.documentoturma).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaidlocal);
modelBuilder.Entity<pessoa>().HasMany(e => e.movimento).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaid);
modelBuilder.Entity<pessoa>().HasMany(e => e.movimentofavorito).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaid);
modelBuilder.Entity<pessoa>().HasMany(e => e.movimentopendencia).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaid);
modelBuilder.Entity<pessoa>().HasMany(e => e.pessoapaiFilhos).WithOne(e => e.pessoapai).HasForeignKey(e => e.pessoaidpai);
modelBuilder.Entity<pessoa>().HasMany(e => e.pessoamaeFilhos).WithOne(e => e.pessoamae).HasForeignKey(e => e.pessoaidmae);
modelBuilder.Entity<pessoa>().HasMany(e => e.pessoaconjugeFilhos).WithOne(e => e.pessoaconjuge).HasForeignKey(e => e.pessoaidconjuge);
modelBuilder.Entity<pessoa>().HasMany(e => e.pessoacontato).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaid);
modelBuilder.Entity<pessoa>().HasMany(e => e.pessoadependente).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaid);
modelBuilder.Entity<pessoa>().HasMany(e => e.pessoadependentedependenteexistente).WithOne(e => e.pessoadependenteexistente).HasForeignKey(e => e.pessoaiddependenteexistente);
modelBuilder.Entity<pessoa>().HasMany(e => e.pessoamarcador).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaid);
modelBuilder.Entity<pessoa>().HasMany(e => e.portalservicodestino).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaid);
modelBuilder.Entity<pessoa>().HasMany(e => e.propriedade).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaid);
modelBuilder.Entity<pessoa>().HasMany(e => e.usuario).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaid);
modelBuilder.Entity<pessoa>().HasMany(e => e.usuariopermissaolocal).WithOne(e => e.pessoa).HasForeignKey(e => e.pessoaidlocal);
modelBuilder.Entity<pessoaassociado>().HasMany(e => e.mandatodiretoria).WithOne(e => e.pessoaassociado).HasForeignKey(e => e.pessoaidassociado);
modelBuilder.Entity<portallembrete>().HasMany(e => e.lembrete).WithOne(e => e.portallembrete).HasForeignKey(e => e.portallembreteid);
modelBuilder.Entity<portalmenu>().HasMany(e => e.portalmenuFilhos).WithOne(e => e.portalmenupai).HasForeignKey(e => e.portalmenuidpai);
modelBuilder.Entity<portalmenu>().HasMany(e => e.portalmenuempresapermissao).WithOne(e => e.portalmenu).HasForeignKey(e => e.portalmenuid);
modelBuilder.Entity<portalmenu>().HasMany(e => e.portalmenuusuario).WithOne(e => e.portalmenu).HasForeignKey(e => e.portalmenuid);
modelBuilder.Entity<portalmenu>().HasMany(e => e.portalmenuusuariopermissao).WithOne(e => e.portalmenu).HasForeignKey(e => e.portalmenuid);
modelBuilder.Entity<portalplano>().HasMany(e => e.empresa).WithOne(e => e.portalplano).HasForeignKey(e => e.portalplanoid);
modelBuilder.Entity<portalservico>().HasMany(e => e.portallembrete).WithOne(e => e.portalservico).HasForeignKey(e => e.portalservicoid);
modelBuilder.Entity<portalservico>().HasMany(e => e.portalservicodestino).WithOne(e => e.portalservico).HasForeignKey(e => e.portalservicoid);
modelBuilder.Entity<portalsistema>().HasMany(e => e.portalmenu).WithOne(e => e.portalsistema).HasForeignKey(e => e.portalsistemaid);
modelBuilder.Entity<processo>().HasMany(e => e.documentoandamento).WithOne(e => e.processo).HasForeignKey(e => e.processoid);
modelBuilder.Entity<produto>().HasMany(e => e.documento).WithOne(e => e.produto).HasForeignKey(e => e.produtoid);
modelBuilder.Entity<produto>().HasMany(e => e.documentocurso_produto).WithOne(e => e.produto).HasForeignKey(e => e.produtoid);
modelBuilder.Entity<produto>().HasMany(e => e.documentoitem).WithOne(e => e.produto).HasForeignKey(e => e.produtoid);
modelBuilder.Entity<produto>().HasMany(e => e.produtoatributo).WithOne(e => e.produto).HasForeignKey(e => e.produtoid);
modelBuilder.Entity<produto>().HasMany(e => e.produtoconversaode).WithOne(e => e.produtode).HasForeignKey(e => e.produtoidde);
modelBuilder.Entity<produto>().HasMany(e => e.produtoconversaopara).WithOne(e => e.produtopara).HasForeignKey(e => e.produtoidpara);
modelBuilder.Entity<produto>().HasMany(e => e.produtoestoque).WithOne(e => e.produto).HasForeignKey(e => e.produtoid);
modelBuilder.Entity<produto>().HasMany(e => e.produtoimagem).WithOne(e => e.produto).HasForeignKey(e => e.produtoid);
modelBuilder.Entity<produto>().HasMany(e => e.produtomarcador).WithOne(e => e.produto).HasForeignKey(e => e.produtoid);
modelBuilder.Entity<produto>().HasMany(e => e.produtometadata).WithOne(e => e.produto).HasForeignKey(e => e.produtoid);
modelBuilder.Entity<produto>().HasMany(e => e.taxa).WithOne(e => e.produto).HasForeignKey(e => e.produtoid);
modelBuilder.Entity<produtoestoque>().HasMany(e => e.produtoformapagamento).WithOne(e => e.produtoestoque).HasForeignKey(e => e.produtoestoqueid);
modelBuilder.Entity<produtoformapagamento>().HasMany(e => e.documentoitem).WithOne(e => e.produtoformapagamento).HasForeignKey(e => e.produtoformapagamentoid);
modelBuilder.Entity<produtoformapagamento>().HasMany(e => e.movimentopendencia).WithOne(e => e.produtoformapagamento).HasForeignKey(e => e.produtoformapagamentoid);
modelBuilder.Entity<usuario>().HasMany(e => e.auditoria).WithOne(e => e.usuario).HasForeignKey(e => e.usuarioid);
modelBuilder.Entity<usuario>().HasMany(e => e.portalmenuusuario).WithOne(e => e.usuario).HasForeignKey(e => e.usuarioid);
modelBuilder.Entity<usuario>().HasMany(e => e.portalmenuusuariopermissao).WithOne(e => e.usuario).HasForeignKey(e => e.usuarioid);
modelBuilder.Entity<usuario>().HasMany(e => e.usuariopermissaoconta).WithOne(e => e.usuario).HasForeignKey(e => e.usuarioid);
modelBuilder.Entity<usuario>().HasMany(e => e.usuariopermissaolocal).WithOne(e => e.usuario).HasForeignKey(e => e.usuarioid);
modelBuilder.Entity<agenda>().HasOne(a => a.documentoturmaencontro).WithOne(b => b.agenda).HasForeignKey<documentoturmaencontro>(b => b.agendaiddocumentoturmaencontro);
modelBuilder.Entity<documento>().HasOne(a => a.documentoautomovel).WithOne(b => b.documento).HasForeignKey<documentoautomovel>(b => b.documentoidautomovel);
modelBuilder.Entity<documento>().HasOne(a => a.documentoconsulta).WithOne(b => b.documento).HasForeignKey<documentoconsulta>(b => b.DocumentoIdConsulta);
modelBuilder.Entity<documento>().HasOne(a => a.documentocontrato).WithOne(b => b.documento).HasForeignKey<documentocontrato>(b => b.documentoidcontrato);
modelBuilder.Entity<documento>().HasOne(a => a.documentocurso).WithOne(b => b.documento).HasForeignKey<documentocurso>(b => b.documentoidcurso);
modelBuilder.Entity<documento>().HasOne(a => a.documentopagamento).WithOne(b => b.documento).HasForeignKey<documentopagamento>(b => b.documentoidpagamento);
modelBuilder.Entity<documento>().HasOne(a => a.documentotarefa).WithOne(b => b.documento).HasForeignKey<documentotarefa>(b => b.documentoidtarefa);
modelBuilder.Entity<documento>().HasOne(a => a.documentoturma).WithOne(b => b.documento).HasForeignKey<documentoturma>(b => b.documentoidturma);
modelBuilder.Entity<pessoa>().HasOne(a => a.funcionario).WithOne(b => b.pessoa).HasForeignKey<funcionario>(b => b.pessoaidfuncionario);
modelBuilder.Entity<pessoa>().HasOne(a => a.pessoaassociado).WithOne(b => b.pessoa).HasForeignKey<pessoaassociado>(b => b.pessoaidassociado);
modelBuilder.Entity<pessoa>().HasOne(a => a.pessoacliente).WithOne(b => b.pessoa).HasForeignKey<pessoacliente>(b => b.pessoaidcliente);
modelBuilder.Entity<pessoa>().HasOne(a => a.pessoafilial).WithOne(b => b.pessoa).HasForeignKey<pessoafilial>(b => b.pessoaidfilial);
modelBuilder.Entity<pessoa>().HasOne(a => a.pessoafornecedor).WithOne(b => b.pessoa).HasForeignKey<pessoafornecedor>(b => b.pessoaidfornecedor);
modelBuilder.Entity<pessoa>().HasOne(a => a.pessoapaciente).WithOne(b => b.pessoa).HasForeignKey<pessoapaciente>(b => b.pessoaidpaciente);
